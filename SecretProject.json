{
  "Description": "SecretProduct",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Database Configuration:"
          }, 
          "Parameters": [
          	"DBName", 
            "DBUsername", 
            "DBPassword", 
            "DBInstanceClass", 
            "DBAllocatedStorage"
          ]
        }
      ],        
      "ParameterLabels": {
        "DBName": {
          "default": "Database Name"
        }, 
      	"DBUsername": {
          "default": "Database User Name"
        }, 
        "DBPassword": {
          "default": "Database Password"
        }, 
        "DBInstanceClass": {
          "default": "Database Instance Class"
        }, 
        "DBAllocatedStorage": {
          "default": "Database Storage"
        }
      }
    }
  }, 
  "Parameters": {
    "KeyPairName": {
      "Description": "Existing Keypair to SSH",
      "Type": "AWS::EC2::KeyPair::KeyName",   
      "MinLength": "1",
      "MaxLength": "255",
      "Default" : "gkeypair",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "KeyPairName is a required Field and can contain only ASCII characters."
    },
    "InstanceType": {
    	"Description": "EC2 Instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues" : [ "t2.micro","m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge",
        "c4.large", "c4.xlarge", "c4.2xlarge","g2.2xlarge", "r3.large", "r4.large", "i3.large"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "InstanceCount": {
      "Description": "Number of Amazon EC2 instances to Launch. (Must be a number between 1 and 3).",
      "Type": "Number",
      "Default": "3",
      "ConstraintDescription": "Must be a number between 1 and 3.",
      "MinValue": "1",
      "MaxValue": "3"
    },   
    "SSHLocation": {
      "Description": "The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DBName": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*", 
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.", 
      "Default": "projectdb", 
      "Description": "The database name", 
      "MaxLength": "64", 
      "MinLength": "1", 
      "Type": "String"
    }, 
    "DBUsername": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*", 
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.", 
      "Default": "admin", 
      "Description": "The database admin account username", 
      "MaxLength": "16", 
      "MinLength": "1", 
      "NoEcho": "true", 
      "Type": "String"
    },
    "DBPassword": {
      "AllowedPattern": "[a-zA-Z0-9]*", 
      "ConstraintDescription": "must contain only alphanumeric characters.", 
      "Default": "password", 
      "Description": "The database admin account password", 
      "MaxLength": "41", 
      "MinLength": "8", 
      "NoEcho": "true", 
      "Type": "String"
    },    
    "DBInstanceClass": {
      "AllowedValues": [
        "db.m1.small", 
        "db.m1.large"
      ], 
			"ConstraintDescription": "must select a valid database instance type.", 
			"Default": "db.m1.small", 
			"Description": "Database instance class", 
			"Type": "String"
    },
    "DBAllocatedStorage": {
      "ConstraintDescription": "must be between 5 and 1024Gb.", 
      "Default": "5", 
      "Description": "The size of the database (Gb)", 
      "MaxValue": "1024", 
      "MinValue": "5", 
      "Type": "Number"
    }
	},
	"Mappings": {
  	"Region2AMI": {
      "us-east-1": {
        "Ubuntu":"ami-6edd3078"
      },
      "us-east-2":{
         "Ubuntu":"ami-fcc19b99"
      },
      "us-west-1":{
        "Ubuntu":"ami-539ac933"
      },
      "us-west-2":{
        "Ubuntu":"ami-7c803d1c"
    	},
      "eu-west-1":{
        "Ubuntu":"ami-405f7226"
      },
      "eu-west-2":{
        "Ubuntu":"ami-ede2e889"
      },
      "eu-central-1":{
        "Ubuntu":"ami-5aee2235"
      },
      "ap-southeast-1":{
        "Ubuntu":"ami-b1943fd2"
      },
      "ap-southeast-2":{
        "Ubuntu":"ami-fe71759d"
      },
      "ap-northeast-1":{
        "Ubuntu":"ami-eb49358c"
      },
      "ap-northeast-2":{
        "Ubuntu":"ami-93d600fd,"
      },
      "ap-south-1":{
        "Ubuntu":"ami-dd3442b2"
      },
      "ca-central-1":{
        "Ubuntu":"ami-3d299b59"
      },
      "sa-east-1":{
        "Ubuntu":"ami-7379e31f"
      }
    }
  },
	"Resources": {
		"VPC":{
			"Type":"AWS::EC2::VPC",    
			"Properties": {
				"CidrBlock":"10.0.0.0/16",
				"EnableDnsSupport":true,
				"EnableDnsHostnames":true,
				"InstanceTenancy":"default",
				"Tags":[
					{
						"Key":"Name",
						"Value": {
							"Ref":"AWS::StackName"
						}
					}
				]
			}
		},
		"InternetGateway": {
			"Type":"AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key":"Name",
						"Value": {
							"Ref":"AWS::StackName"
						}
					}
				]
			}
		},
		"AttachGateway": {
			"Type":"AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref":"VPC"
				},
				"InternetGatewayId": {
					"Ref":"InternetGateway"
				}
			}
		},
		"DMZ": {
			"Type":"AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref":"VPC"
				},
				"CidrBlock":"10.0.1.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
				"MapPublicIpOnLaunch":"true",
				"Tags":[
					{
						"Key":"Name",
						"Value": {
							"Fn::Join":[                                        
								"",
								[
									{ "Ref" : "AWS::StackName" }, "-DMZ"
								]
							]
						}
					}
				]
			}
		},		
		"ApplicationLayer":{
			"Type":"AWS::EC2::Subnet",
			"Properties":{
				"VpcId":{
					"Ref":"VPC"
				},
				"CidrBlock":"10.0.2.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
				"MapPublicIpOnLaunch":"true",
				"Tags":[
					{
						"Key":"Name",
						"Value":{
							"Fn::Join":[
								"",
								[
									{ "Ref" : "AWS::StackName" }, "-ApplicationLayer"
								]
							]
						}
					}
				]
			}
		},
		"DatabaseLayer":{
			"Type":"AWS::EC2::Subnet",
			"Properties":{
				"VpcId":{
					"Ref":"VPC"
				},
				"CidrBlock":"10.0.3.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
				"MapPublicIpOnLaunch":"true",
				"Tags":[
					{
						"Key":"Name",
						"Value":{
							"Fn::Join":[
								"",
								[
									{ "Ref" : "AWS::StackName" }, "-DatabaseLayer"
								]
							]
						}
					}
				]
			}
		},    
		"PublicRouteTable":{
			"Type":"AWS::EC2::RouteTable",
			"Properties":{
				"VpcId":{
					"Ref":"VPC"
				},
				"Tags":[
					{
						"Key":"Name",
						"Value":{
							"Ref":"AWS::StackName"
						}
					}
				]
			}
		},
		"PublicRoute":{
			"Type":"AWS::EC2::Route",
			"Properties":{
				"RouteTableId":{
					"Ref":"PublicRouteTable"
				},
				"DestinationCidrBlock":"0.0.0.0/0",
				"GatewayId":{
					"Ref":"InternetGateway"
				}
			}
		},
		"DMZRouteTableAssociation":{
			"Type":"AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": [
				"PublicRouteTable", 
				"DMZ"
			],
			"Properties":{
				"RouteTableId":{
					"Ref":"PublicRouteTable"
				},
				"SubnetId":{
					"Ref":"DMZ"
				}
			}
		},             
		"DMZSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "DMZ Security group",
				"VpcId":{
						"Ref":"VPC"
				},        
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"CidrIp": "0.0.0.0/0"
                    },
                    {
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
                    }
                ],
                "SecurityGroupEgress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
                    },
                    {
						"IpProtocol": "tcp",
						"FromPort": "8080",
						"ToPort": "8080",
						"CidrIp": {
							"Ref": "0.0.0.0/0"
						}
                    }
                ]
			}
		},
		"ApplicationSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Application Security Group",
				"VpcId":{
						"Ref":"VPC"
				},        
				"SecurityGroupIngress": [         
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "8080",
						"ToPort": "8080",
						"CidrIp": "10.0.1.0/24"
					}
                ],
                "SecurityGroupEgress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
                    },
                    {
						"IpProtocol": "tcp",
						"FromPort": "5432",
						"ToPort": "5432",
						"CidrIp": {
							"Ref": "0.0.0.0/0"
						}
                    }
                ]
			}
        },
        "DatabaseSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Application Security Group",
				"VpcId":{
						"Ref":"VPC"
				},        
				"SecurityGroupIngress": [         
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "5432",
						"ToPort": "5432",
						"CidrIp": "10.0.2.0/24"
					}
				]
			}
        }
    },
	"Outputs": {

	}
}